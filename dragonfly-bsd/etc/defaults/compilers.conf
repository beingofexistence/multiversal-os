#
# Copyright (c) 2014 The DragonFly Project.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of The DragonFly Project nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific, prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#


STD_INCOPT="-nostdinc -iprefix ${INCPREFIX} -iwithprefixbefore /usr/include"
DPORT_GCC_STD_INCOPTXX="-isystem /usr/local/lib/${CCVER}/include/c++ \
	-isystem /usr/local/lib/${CCVER}/include/c++/${MACHARCH}-portbld-dragonfly${MACHREL}"
DPORT_CLANG_STD_INCOPTXX="-cxx-isystem /usr/include/c++/8.0"


# For each custom compiler definition, it is mandatory to define the
# following variables:
#     <CCVER>_CC         (path to C compiler)
#     <CCVER>_CXX        (path to C++ compiler)
#     <CCVER>_CPP        (path to pre-processor)
#     <CCVER>_INCOPT     (include options for cc, c++ and cpp)
#     <CCVER>_INCOPTCXX  (extra include options for c++)
#
# The following variables are optional:
#     <CCVER>_CFLAGS     (extra CFLAGS)
#     <CCVER>_CXXFLAGS   (extra CXXFLAGS)
#     <CCVER>_CPPFLAGS   (extra CPPFLAGS)
#     <CCVER>_GCOV       (path to gcov, /usr/libexec/gcc80/gcov is default)
#
# The following commands call the base compilers by default:
#     gcc, g++, clang, clang++, clang-cpp
#
# However, these can be individually overridden:
#     <CCVER>_GCC        (path executed when /usr/bin/gcc called)
#     <CCVER>_GXX        (path executed when /usr/bin/g++ called)
#     <CCVER>_CLANG      (path executed when /usr/bin/clang called)
#     <CCVER>_CLANGCXX   (path executed when /usr/bin/clang++ called)
#     <CCVER>_CLANGCPP   (path executed when /usr/bin/clang-cpp called)
#


# devel/llvm10
clang10_CC=/usr/local/bin/clang10
clang10_CXX=/usr/local/bin/clang++10
clang10_CPP=/usr/local/bin/clang-cpp10
clang10_INCOPT="-nostdinc  -iprefix ${INCPREFIX} -iwithprefixbefore /usr/include -isystem /usr/local/llvm10/lib/clang/10.0.1/include"
clang10_INCOPTCXX="${DPORT_CLANG_STD_INCOPTXX} -cxx-isystem /usr/include"
clang10_CLANG=${clang10_CC}
clang10_CLANGCXX=${clang10_CXX}
clang10_CLANGCPP=${clang10_CPP}

# devel/llvm11
clang11_CC=/usr/local/bin/clang11
clang11_CXX=/usr/local/bin/clang++11
clang11_CPP=/usr/local/bin/clang-cpp11
clang11_INCOPT="-nostdinc  -iprefix ${INCPREFIX} -iwithprefixbefore /usr/include -isystem /usr/local/llvm11/lib/clang/11.0.1/include"
clang11_INCOPTCXX="${DPORT_CLANG_STD_INCOPTXX} -cxx-isystem /usr/include"
clang11_CLANG=${clang11_CC}
clang11_CLANGCXX=${clang11_CXX}
clang11_CLANGCPP=${clang11_CPP}
