.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)brk.2	8.4 (Berkeley) 5/1/95
.\" $FreeBSD: src/lib/libc/sys/brk.2,v 1.13.2.10 2002/03/04 12:00:31 dwmalone Exp $
.\"
.Dd March 1, 2019
.Dt SBRK 2
.Os
.Sh NAME
.Nm sbrk
.Nd change data segment size (obsolete)
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/types.h
.In unistd.h
.Ft void *
.Fn sbrk "intptr_t incr"
.Sh DESCRIPTION
.Bf -symbolic
The
.Fn sbrk
function is a legacy interface from before the
advent of modern virtual memory management.
.Fn sbrk
has only limited functionality due to having to play nice with
modern system calls such as
.Xr mmap 2 .
.Ef
.Pp
The
.Fn sbrk
function is used to change the amount of memory allocated in a
process's data segment.
It does this by moving the location of the
.Dq break .
The break is the first address after the end of the process's
uninitialized data segment (also known as the
.Dq BSS ) .
.Pp
The break range is limited by the
.Dv RLIMIT_DATA
resource limit applied to the process.
.Pp
The
.Fn sbrk
function raises the break by
.Fa incr
bytes, returning a pointer to the base of the new memory.
Any attempt to lower the break point will return
.Po Vt "void *" Pc Ns \-1
and set errno to
.Er EOPNOTSUPP .
.Sh NOTES
While the actual process data segment size maintained by the kernel will only
grow or shrink in page sizes, this function allows setting the break
to unaligned values (i.e., it may point to any address inside the last
page of the data segment).
.Pp
The current value of the program break may be determined by calling
.Fn sbrk 0 .
.Pp
The
.Fn sbrk
function is thread-safe.
See also
.Xr end 3 .
.Pp
The
.Xr getrlimit 2
system call may be used to determine
the maximum permissible size of the
data segment.
It will not be possible to set the break
beyond
.Dq Va etext No + Va rlim.rlim_max
where the
.Va rlim.rlim_max
value is returned from a call to
.Fn getrlimit RLIMIT_DATA &rlim .
(See
.Xr end 3
for the definition of
.Va etext ) .
.Sh RETURN VALUES
The
.Fn sbrk
function returns the prior break pointer if successful;
otherwise the value
.Po Vt "void *" Pc Ns \-1
is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn sbrk
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The requested break value was beyond the beginning of the data segment.
.It Bq Er ENOMEM
The data segment size limit, as set by
.Xr setrlimit 2 ,
was exceeded.
.It Bq Er ENOMEM
Insufficient space existed in the swap area
to support the expansion of the data segment.
.It Bq Er EOPNOTSUPP
An attempt has been made to perform an action that is no longer supported
by this function.
.El
.Sh SEE ALSO
.Xr execve 2 ,
.Xr getrlimit 2 ,
.Xr mmap 2 ,
.Xr end 3 ,
.Xr free 3 ,
.Xr malloc 3
.Sh BUGS
Mixing
.Fn sbrk
with
.Xr malloc 3 ,
.Xr free 3 ,
or similar functions will result in non-portable program behavior.
.Pp
Setting the break may fail due to a temporary lack of
swap space.
It is not possible to distinguish this
from a failure caused by exceeding the maximum size of
the data segment without consulting
.Xr getrlimit 2 .
