.\"	$OpenBSD: statvfs.3,v 1.5 2008/03/26 09:37:59 jmc Exp $
.\"	$NetBSD: statfs.2,v 1.10 1995/06/29 11:40:48 cgd Exp $
.\"	$DragonFly: src/lib/libc/sys/statvfs.2,v 1.3 2008/09/30 08:28:36 swildner Exp $
.\"
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)statfs.2	8.3 (Berkeley) 2/11/94
.\"
.Dd September 28, 2008
.Dt STATVFS 2
.Os
.Sh NAME
.Nm statvfs ,
.Nm fstatvfs
.Nd get file system statistics
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/statvfs.h
.Ft int
.Fn statvfs "const char *path" "struct statvfs *buf"
.Ft int
.Fn fstatvfs "int fd" "struct statvfs *buf"
.Sh DESCRIPTION
.Fn statvfs
returns information about a mounted file system.
.Fa path
is the path name of any file within the mounted file system.
.Fa buf
is a pointer to a
.Nm statvfs
structure defined as follows:
.Bd -literal
struct statvfs {
        unsigned long f_bsize;       /* file system block size */
        unsigned long f_frsize;      /* fundamental file system block size */
        fsblkcnt_t    f_blocks;      /* number of blocks (unit f_frsize) */
        fsblkcnt_t    f_bfree;       /* free blocks in file system */
        fsblkcnt_t    f_bavail;      /* free blocks for non-root */
        fsfilcnt_t    f_files;       /* total file inodes */
        fsfilcnt_t    f_ffree;       /* free file inodes */
        fsfilcnt_t    f_favail;      /* free file inodes for to non-root */
        unsigned long f_fsid;        /* file system id */
        unsigned long f_flag;        /* bit mask of f_flag values */
        unsigned long f_namemax;     /* maximum filename length */
        uid_t         f_owner;       /* user that mounted the filesystem */
        unsigned int  f_type;        /* filesystem type */

        uint64_t      f_syncreads;   /* count of sync reads since mount */
        uint64_t      f_syncwrites;  /* count of sync writes since mount */

        uint64_t      f_asyncreads;  /* count of async reads since mount */
        uint64_t      f_asyncwrites; /* count of async writes since mount */

        /*
         * DragonFly extensions - full uuid FSID and owner
         */
        uuid_t        f_fsid_uuid;
        uuid_t        f_uid_uuid;
};

/*
 * f_flag definitions
 */
#define ST_RDONLY     0x00000001     /* fs is read-only */
#define ST_NOSUID     0x00000002     /* ST_ISUID or ST_ISGID not supported */

/*
 * DragonFly specific flags
 */
#define ST_FSID_UUID  0x40000000     /* f_fsid_uuid field is valid */
#define ST_OWNER_UUID 0x80000000     /* f_owner_uuid field is valid */
.Ed
.Pp
The fields of type
.Va fsblkcnt_t
are reported in units of
.Va f_frsize .
.Pp
.Fn fstatvfs
returns the same information about an open file referenced by descriptor
.Fa fd .
.Sh RETURN VALUES
.Rv -std statvfs fstatvfs
.Sh ERRORS
.Fn statvfs
fails if one or more of the following are true:
.Bl -tag -width Er
.It Bq Er ENOTDIR
A component of the path prefix of
.Fa path
is not a directory.
.It Bq Er ENAMETOOLONG
The length of a component of
.Fa path
exceeds
.Dv {NAME_MAX}
characters, or the length of
.Fa path
exceeds
.Dv {PATH_MAX}
characters.
.It Bq Er ENOENT
The file referred to by
.Fa path
does not exist.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix of
.Fa path .
.It Bq Er ELOOP
Too many symbolic links were encountered in translating
.Fa path .
.It Bq Er EFAULT
.Fa buf
or
.Fa path
points to an invalid address.
.It Bq Er EIO
An
.Tn I/O
error occurred while reading from or writing to the file system.
.El
.Pp
.Fn fstatvfs
fails if one or more of the following are true:
.Bl -tag -width Er
.It Bq Er EBADF
.Fa fd
is not a valid open file descriptor.
.It Bq Er EFAULT
.Fa buf
points to an invalid address.
.It Bq Er EIO
An
.Tn I/O
error occurred while reading from or writing to the file system.
.El
.Sh SEE ALSO
.Xr df 1 ,
.Xr mount 2 ,
.Xr stat 2 ,
.Xr statfs 2
.Sh STANDARDS
The
.Fn statvfs
and
.Fn fstatvfs
system calls conform to
.St -p1003.1-2001 .
.Sh HISTORY
The
.Fn statvfs
and
.Fn fstatvfs
functions first appeared in
.Dx 1.13 .
