TARGET_ARCH?=	${MACHINE_ARCH}

version=	${GCCCOMPLETEVER}
target_machine=	${TARGET_ARCH}-pc-dragonflybsd

GCC_CPU?=	${TARGET_ARCH}
BYTESLONG=	4
HWI_TYPE=	long long
.if ${TARGET_ARCH} == "x86_64"
GCC_CPU=	i386
BYTESLONG=	8
HWI_TYPE=	long
.endif

# from gcc/Makefile
srcdir= ${GCCDIR}/gcc

host_xm_file_list=	${STOPDIR}/cc_prep/auto-host.h
host_xm_file_list+=	${GCCDIR}/include/ansidecl.h
HASHTAB_H   = ${GCCDIR}/include/hashtab.h
SPLAY_TREE_H= ${GCCDIR}/include/splay-tree.h
SYMTAB_H    = ${GCCDIR}/libcpp/include/symtab.h
CPP_ID_DATA_H=	${GCCDIR}/libcpp/include/line-map.h \
		${GCCDIR}/libcpp/include/cpplib.h \
		${GCCDIR}/libcpp/include/cpp-id-data.h

md_file=	${GCCDIR}/gcc/config/${GCC_CPU}/${GCC_CPU}.md
out_file=	$(srcdir)/config/${GCC_CPU}/${GCC_CPU}.c

EXTRA_GCC_SRCS=	driver-${GCC_CPU}.c
GTFILES_SRCDIR = $(srcdir)


# This is ordered to avoid build warnings/errors

TARGET_INC=	options.h
TARGET_INC+=	config/vxworks-dummy.h
.if ${TARGET_ARCH} == "x86_64"
TARGET_INC+=	config/${GCC_CPU}/biarch64.h
.endif
TARGET_INC+=	config/${GCC_CPU}/${GCC_CPU}.h
.if ${TARGET_ARCH} == "i386" || ${TARGET_ARCH} == "x86_64"
TARGET_INC+=	config/${GCC_CPU}/unix.h
TARGET_INC+=	config/${GCC_CPU}/att.h
.endif
TARGET_INC+=	config/dbxelf.h
TARGET_INC+=	config/elfos.h
TARGET_INC+=	config/dragonfly.h
TARGET_INC+=	config/dragonfly-stdint.h
.if ${TARGET_ARCH} == "x86_64"
TARGET_INC+=	config/${GCC_CPU}/x86-64.h
.endif
.if ${TARGET_ARCH} == "i386" || ${TARGET_ARCH} == "x86_64"
TARGET_INC+=	config/${GCC_CPU}/dragonfly.h
.endif
TARGET_INC+=	config/initfini-array.h
TARGET_INC+=	dragonfly-native.h

#
# Use TARGET_INC as a template and build a list of target specific
# include files for gengtype to scan
#
.for H in ${TARGET_INC}
.for D in ${GCCDIR}/gcc/config ${GCCDIR}/gcc \
	${STOPDIR}/cc_prep/config ${STOPDIR}/cc_prep ${OTOPDIR}/cc_prep
.if exists($D/$H) && empty(tm_file_list:M*/$H)
tm_file_list+=	$D/$H
.endif
.endfor
.endfor
