.\"-
.\" Copyright (c) 1989, 1990, 1993, 1994
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the Institute of Electrical and Electronics Engineers, Inc.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)chflags.1	8.4 (Berkeley) 5/2/95
.\" $FreeBSD: head/bin/chflags/chflags.1 282208 2015-04-29 00:49:00Z smh $
.\"
.Dd May 11, 2016
.Dt CHFLAGS 1
.Os
.Sh NAME
.Nm chflags
.Nd change file flags
.Sh SYNOPSIS
.Nm
.Op Fl fhv
.Oo
.Fl R
.Op Fl H | Fl L | Fl P
.Oc
.Ar flags
.Ar
.Sh DESCRIPTION
The
.Nm
utility modifies the file flags of the listed files
as specified by the
.Ar flags
operand.
.Pp
The options are as follows:
.Bl -tag -width indent
.It Fl f
Do not display a diagnostic message if
.Nm
could not modify the flags for
.Va file ,
nor modify the exit status to reflect such failures.
.It Fl H
If the
.Fl R
option is specified, symbolic links on the command line are followed
and hence unaffected by the command.
(Symbolic links encountered during traversal are not followed.)
.It Fl h
If the
.Ar file
is a symbolic link,
change the file flags of the link itself rather than the file to which
it points.
.It Fl L
If the
.Fl R
option is specified, all symbolic links are followed.
.It Fl P
If the
.Fl R
option is specified, no symbolic links are followed.
This is the default.
.It Fl R
Change the file flags of the file hierarchies rooted in the files,
instead of just the files themselves.
Beware of unintentionally matching the
.Dq Pa ".."
hard link to the parent directory when using wildcards like
.Dq Li ".*" .
.It Fl v
Cause
.Nm
to be verbose, showing filenames as the flags are modified.
If the
.Fl v
option is specified more than once, the old and new flags of the file
will also be printed, in octal notation.
.El
.Pp
The flags are specified as an octal number or a comma separated list
of keywords.
The following keywords are currently defined:
.Bl -tag -offset indent -width ".Cm nouhistory"
.It Cm arch , archived
set the archived flag (super-user only)
.It Cm opaque
set the opaque flag (owner or super-user only)
.It Cm nodump
set the nodump flag (owner or super-user only)
.It Cm noshistory
set the system nohistory flag (super-user only)
.It Cm nouhistory , nohistory
set the user nohistory flag (owner or super-user only)
.It Cm sappnd , sappend
set the system append-only flag (super-user only)
.It Cm schg , schange , simmutable
set the system immutable flag (super-user only)
.It Cm sunlnk , sunlink
set the system undeletable flag (super-user only)
.It Cm uappnd , uappend
set the user append-only flag (owner or super-user only)
.It Cm uchg , uchange , uimmutable
set the user immutable flag (owner or super-user only)
.It Cm uunlnk , uunlink
set the user undeletable flag (owner or super-user only)
.It Cm cache , ucache
control the data
.Xr swapcache 8
(recursive, does not cross mounts) (owner or super-user only)
.It Cm noscache
control the data
.Xr swapcache 8
(recursive, does not cross mounts) (super-user only)
.El
.Pp
If a
.Dq Cm no
prefix is added or removed from a keyword, the meaning is negated.
For example:
.Pp
.Bl -tag -offset indent -width "nouchg" -compact
.It Cm nouchg
clear the user immutable flag (owner or super-user only)
.It Cm dump
clear the nodump flag (owner or super-user only)
.El
.Pp
A few of the octal values include:
.Bl -tag -offset indent -width ".Li 10"
.It Li 0
Clear all file flags.
.It Li 1
Translates to the
.Cm nodump
keyword.
.It Li 2
Translates to the
.Cm uchg
keyword.
.It Li 3
Translates to the
.Cm uchg , nodump
keywords.
.It Li 4
Translates to the
.Cm uappnd
keyword.
.It Li 10
Translates to the
.Cm opaque
keyword.
.It Li 20
translates to the
.Cm uunlnk
keyword.
.El
.Pp
Other combinations of keywords may be placed by using
the octets assigned; however, these are the most notable.
.Pp
Unless the
.Fl H ,
.Fl L ,
or
.Fl h
options are given,
.Nm
on a symbolic link always succeeds and has no effect.
The
.Fl H ,
.Fl L
and
.Fl P
options are ignored unless the
.Fl R
option is specified.
In addition, these options override each other and the
command's actions are determined by the last one specified.
.Pp
You can use
.Dq Li "ls -lo"
to see the flags of existing files.
.Pp
Note that the ability to change certain flags is dependent
on the current kernel
.Va securelevel
setting.
See
.Xr security 7
for more information on this setting.
.Sh SWAPCACHE FLAGS
The
.Cm cache
bit may be set to enable
.Xr swapcache 8
data caching.
The superuser flag,
.Cm noscache
may be used to disable
.Xr swapcache 8
data caching and overrides the user flag.
.Pp
The flag is recursive but does not cross mount points.
Setting it on a top-level directories or mount point will
automatically apply the flag to the entire subtree or until
a mount point is hit.
You may have to refresh the namecache with a dummy
.Xr find 1
command after changing the flag in a top level directory.
You do not have to recursive set the flag with
.Nm
.Fl R
and, in fact, we do not recommend it under any circumstances.
Filesystems which do not support flags generally have a
.Cm cache
mount option to enable swapcache operation on the mount.
.Pp
If you intend to use swapcache data the
.Cm vm.swapcache.use_chflags
sysctl determines whether the
.Nm
flags are used or not.
If turned off and
.Cm vm.swapcache.data_enable
is turned on, data caching is turned on globally and the
file flags are ignored.
If
.Cm use_chflags
is turned on along with
.Cm data_enable
then only subtrees marked cacheable will be swapcached.
.Pp
You would typically want to enable the cache on
.Pa /usr , /home ,
and
.Pa /bin
and disable it for
.Pa /usr/obj .
Alternatively if you want to cache
NFS mounts (where
.Nm
doesn't work), you can set the flag on
some parent directory, possibly even the root
.Pq Pa /
itself,
and then selectively disable it in places where you don't want it.
.Pp
This only applies to data caching.
Meta-data caching is universal when enabled.
.Sh EXIT STATUS
.Ex -std
.Sh SEE ALSO
.Xr ls 1 ,
.Xr chflags 2 ,
.Xr stat 2 ,
.Xr fts 3 ,
.Xr security 7 ,
.Xr symlink 7 ,
.Xr swapcache 8
.Sh HISTORY
The
.Nm
command first appeared in
.Bx 4.4 .
.Sh BUGS
Only a limited number of utilities are
.Nm
aware.
Some of these tools include
.Xr ls 1 ,
.Xr cp 1 ,
.Xr find 1 ,
.Xr install 1 ,
.Xr dump 8 ,
and
.Xr restore 8 .
In particular a tool which is not currently
.Nm
aware is the
.Xr pax 1
utility.
